pipeline {
    agent any
    options {
        ansiColor('xterm')
    }

    stages {
        
        stage("Install Sonar Scanner") {
            environment{
                scannerBaseHome = "${HOME}/scannerBaseHome"
                scannerHome = "${scannerBaseHome}/sonar-scanner-4.7.0.2747-linux"

            }
            steps {

                // Install Sonar Scanner
                sh("mkdir ${scannerBaseHome} && cd ${scannerBaseHome} && wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip && unzip sonar-scanner.zip && rm -rf sonar-scanner.zip")
                sh("cp -rf sonar-project.properties ${scannerHome}/conf/")               
            }

        } //stage

        stage("Importing the certificates"){
            steps{
                sh 'which java'
                // withCredentials(file(credentialsId: 'secret', variable: 'FILE')]){
                //     sh 'keytool -importcert -keystore cacerts -file $FILE -trustcacerts -alias "ibm_root"'
                // }
            }
        } //stage 

        stage("Sonarqube Code Quality Check"){
            environment{
                scannerBaseHome = "${HOME}/scannerBaseHome"
                scannerHome = "${scannerBaseHome}/sonar-scanner-4.7.0.2747-linux"
            }
            steps{
                sh("${scannerHome}/bin/sonar-scanner")
            }
        } //stage
    } //stages
} //pipeline

